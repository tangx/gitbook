<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>use() hook on React 18/19</title><link>https://typonotes.com/books/react/react/react19/use/</link><description>Recent content in use() hook on React 18/19</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://typonotes.com/books/react/react/react19/use/index.xml" rel="self" type="application/rss+xml"/><item><title>1. use 替代 useEffect</title><link>https://typonotes.com/books/react/react/react19/use/use-instead-useEffect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/react/react19/use/use-instead-useEffect/</guid><description>替代 useEffect https://react.dev/reference/react/use#streaming-data-from-server-to-client
定义函数，从服务器获取资源
type MovieType = { title: string } // 获取资源，返回 Promise async function fetchMovie() { const resp = await axios.get&amp;lt;MovieType[]&amp;gt;(&amp;#34;http://localhost:8080/&amp;#34;) return resp.data[0] } useEffect 版本 export default function MovieUseEffectContainer() { // 使用 useState 管理数据状态 const [movie, setMovie] = useState&amp;lt;MovieType | undefined&amp;gt;(undefined) // 使用 useEffect 获取资源 useEffect(() =&amp;gt; { fetchMovie().then(setMovie) }, []) return ( &amp;lt;div&amp;gt; &amp;lt;Suspense fallback={&amp;lt;h2&amp;gt;MovieUseEffect, Loading .</description></item></channel></rss>