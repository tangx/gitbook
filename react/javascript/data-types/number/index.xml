<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1. 数字 on React 18/19</title><link>https://typonotes.com/books/react/javascript/data-types/number/</link><description>Recent content in 1. 数字 on React 18/19</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://typonotes.com/books/react/javascript/data-types/number/index.xml" rel="self" type="application/rss+xml"/><item><title>1. NaN</title><link>https://typonotes.com/books/react/javascript/data-types/number/number-nan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/javascript/data-types/number/number-nan/</guid><description>2. 特殊数字 NaN 反正: 用之前， 最好先测试一下
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN
NaN 表示 Not a number。 NaN 是数字类型。 可以符合逻辑的想法:
任何 数字 相关的操作， 如果 执行错误，则返回 NaN 但是也有很多不符合逻辑的 例外:
字符串 -&amp;gt; 数字 有 隐式 转换。 // 数字函数处理 **数字行字符串** // parseInt: console.log(parseInt(10)); // 10 console.log(parseInt(&amp;#34;10.5&amp;#34;)); // 10 console.log(parseFloat(&amp;#34;10.5&amp;#34;)); // 10.5 console.log(parseInt(&amp;#34;10.5abc&amp;#34;)); // 10 console.log(parseInt(&amp;#34;abc10.5&amp;#34;)); // NaN // Number 类型转换字符串 console.log(Number(&amp;#34;10.5abc&amp;#34;)); // NaN console.</description></item><item><title>1. Number</title><link>https://typonotes.com/books/react/javascript/data-types/number/number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/javascript/data-types/number/number/</guid><description>1. 数字 JavaScript 只有 一种 数字类型： number。
不分 正数(int), 浮点数(float)
数字类型可以进行 四则运算。 优先级 左右相同， 上下递减
*, / 和 % 求模（余数） +, - Js 的 % 与其他语言不同， 不会舍弃 小数。
console.log(0.4 / 1); // 0.4 console.log(11.5 % 4); // 3.5 圆括号 具有最高优先级。 即可以改变优先级
console.log(5 / 2 + 3); // 5.5 console.log(5 / (2 + 3)); // 1 2. 特殊数字 NaN https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN</description></item><item><title>3. BigInt</title><link>https://typonotes.com/books/react/javascript/data-types/number/bigint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/javascript/data-types/number/bigint/</guid><description/></item></channel></rss>