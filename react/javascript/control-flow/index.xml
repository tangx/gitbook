<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>6. 控制流/分支语句 on React 18/19</title><link>https://typonotes.com/books/react/javascript/control-flow/</link><description>Recent content in 6. 控制流/分支语句 on React 18/19</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://typonotes.com/books/react/javascript/control-flow/index.xml" rel="self" type="application/rss+xml"/><item><title>1. if-else</title><link>https://typonotes.com/books/react/javascript/control-flow/if-else/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/javascript/control-flow/if-else/</guid><description>if&amp;hellip;else
if...else 条件分支。
const a = 1, b = 2 if (a &amp;gt; b) { console.log(&amp;#39;a is less than b&amp;#39;) } else { console.log(&amp;#39;a is not greater than b&amp;#39;) } 2. else 分支可以省略 if (a &amp;lt; b) { console.log(&amp;#39;a is greater than b&amp;#39;) } 3. 多个分支条件 类似 switch
const c = 3 if (a &amp;gt; b) { console.log(&amp;#39;a is greater than b&amp;#39;) } else if (a &amp;lt; c) { console.</description></item><item><title>2. switch</title><link>https://typonotes.com/books/react/javascript/control-flow/switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/javascript/control-flow/switch/</guid><description>switch
switch (expression) { case caseExpression1: statements case caseExpression2: statements // … case caseExpressionN: statements default: statements } 如果所有分支都匹配不成功， 则进入 default 分支。 注意 default 分支是可选的。 switch (a) { case 1: console.log(&amp;#39;a is 1&amp;#39;) break default: console.log(&amp;#39;a is not 1&amp;#39;) // a is not 1 } switch (a) { case 1: console.log(&amp;#39;a is 1&amp;#39;) break } switch 的分支逻辑是 默认下沉 的。 即 一旦某一个分支匹配成功， 则以下所有分支都会被执行, 这一点和 Golang 逻辑正好相反。 Go 默认不下沉 而是使用 fallthrough 关键字主动控制。</description></item><item><title>3. 三元表达式</title><link>https://typonotes.com/books/react/javascript/control-flow/ternary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/javascript/control-flow/ternary/</guid><description>三元表达式(ternary)
但是 并不推荐使用 三元表达式。 推荐使用 if-else 代替。
可读性不高， 尤其是嵌套的情况下。 不支持 代码块。 condition ? exprIfTrue : exprIfFalse const expr = true expr ? console.log(&amp;#39;expr is true&amp;#39;) : console.log(&amp;#39;expr is false&amp;#39;) // expr is true; 当使用 代码块 的时候， 就出问题了。</description></item></channel></rss>