<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>0. 初始化项目 on React 18/19</title><link>https://typonotes.com/books/react/setup/initalize/</link><description>Recent content in 0. 初始化项目 on React 18/19</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://typonotes.com/books/react/setup/initalize/index.xml" rel="self" type="application/rss+xml"/><item><title>1. npx 初始化项目</title><link>https://typonotes.com/books/react/setup/initalize/npx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/setup/initalize/npx/</guid><description>2. 创建项目 npx create-react-app react-basic npx 是 node.js 的工具命令， 查找并执行后续包命令。 create-react-app 是 核心包（固定写法）， 用于创建 react 项目 react-basic 是 react 项目名称， 可以自定义。 3. 项目配置 ## 启动命令 npm start ## 编译命令 npm run build # 注意这个 run 用不用都可以 可以在 package.json 中看到核心组建与启动命令
// 依赖组建 &amp;quot;dependencies&amp;quot;: { &amp;quot;@testing-library/jest-dom&amp;quot;: &amp;quot;^5.17.0&amp;quot;, &amp;quot;@testing-library/react&amp;quot;: &amp;quot;^13.4.0&amp;quot;, &amp;quot;@testing-library/user-event&amp;quot;: &amp;quot;^13.5.0&amp;quot;, &amp;quot;react&amp;quot;: &amp;quot;^18.2.0&amp;quot;, &amp;quot;react-dom&amp;quot;: &amp;quot;^18.2.0&amp;quot;, &amp;quot;react-scripts&amp;quot;: &amp;quot;5.0.1&amp;quot;, &amp;quot;web-vitals&amp;quot;: &amp;quot;^2.1.4&amp;quot; }, // 启动命令 &amp;quot;scripts&amp;quot;: { &amp;quot;start&amp;quot;: &amp;quot;react-scripts start&amp;quot;, &amp;quot;build&amp;quot;: &amp;quot;react-scripts build&amp;quot;, &amp;quot;test&amp;quot;: &amp;quot;react-scripts test&amp;quot;, &amp;quot;eject&amp;quot;: &amp;quot;react-scripts eject&amp;quot; }, 4.</description></item><item><title>2. vite 初始化项目</title><link>https://typonotes.com/books/react/setup/initalize/vite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/setup/initalize/vite/</guid><description>1. 使用 vite 初始化项目 使用 vite guide 创建第一个项目
$ npm create vite@latest # ✔ Project name: … my-vite-react # ✔ Select a framework: › React # ✔ Select a variant: › JavaScript # Scaffolding project in /private/tmp/vite-demo/my-vite-react... # Done. Now run: # cd my-vite-react # npm install # npm run dev 这里创建的是 React + JSX,
入口文件: index.html, 可以在代码中看到，引用了 main.jsx 项目文件: main.jsx, App.jsx 2. npx 迁移到 vite 2.</description></item><item><title>3. vite 配置别名</title><link>https://typonotes.com/books/react/setup/initalize/vite-src-alias/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/setup/initalize/vite-src-alias/</guid><description>1. 安装 types/node 支持 $ npm i @types/node 2. 配置 vite 支持别名 这一步是为了 vite 在编译的时候可以使用 @ 别名符号。
所有 非注释 的内容都是 新增配置
// vite.config.ts // import { defineConfig } from &amp;#39;vite&amp;#39; // import react from &amp;#39;@vitejs/plugin-react&amp;#39; import path from &amp;#39;path&amp;#39; // https://vitejs.dev/config/ export default defineConfig({ // plugins: [react()], resolve: { alias: { &amp;#39;@&amp;#39;: path.resolve(__dirname, &amp;#39;./src&amp;#39;), }, }, }) 3. 配置 VSCode 支持别名 这一步配置是在使用 路径别名 的时候， 为了让 VSCode 支持别名路径， 且显示不报错。</description></item></channel></rss>